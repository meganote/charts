# Default values for spark-history-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: varabonthu/spark-web-ui
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: 1.0.6

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

existingSecret: ""

serviceAccount:
  create: false
  annotations:
    # IRSA role attached to service account
    eks.amazonaws.com/role-arn: "<ENTER_IAM_ROLE_ARN>"
  name: "<ENTER_SERVICE_ACCOUNT_NAME>"

# Enter S3 bucket with Spark Event logs location.
# Ensure IRSA roles has permissions to read the files for the given S3 bucket
sparkHistoryOpts: "-Dspark.history.fs.logDirectory=s3a://<ENTER_S3_BUCKET_NAME>/<PREFIX_FOR_SPARK_EVENT_LOGS>/"

sparkConf: |-
  spark.hadoop.fs.s3a.aws.credentials.provider=com.amazonaws.auth.WebIdentityTokenCredentialsProvider
  spark.history.fs.eventLog.rolling.maxFilesToRetain=5
  spark.hadoop.fs.s3a.impl=org.apache.hadoop.fs.s3a.S3AFileSystem
  spark.eventLog.enabled=true
  spark.history.ui.port=18080

podAnnotations: {}

#podSecurityContext:
#  runAsUser: 1000
#  fsGroup: 1000
#
#securityContext:
#  capabilities:
#    drop:
#     - ALL
#  readOnlyRootFilesystem: true
#  runAsNonRoot: true
#  runAsUser: 1000

service:
  externalPort: 80
  internalPort: 18080
  type: ClusterIP

ingress:
  enabled: false
  annotations: {}

resources:
  limits:
    cpu: 200m
    memory: 2G
  requests:
    cpu: 100m
    memory: 1G

livenessProbe:
  httpGet:
    path: /
    port: 18080
    scheme: HTTP
  timeoutSeconds: 5
  periodSeconds: 30
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /
    port: 18080
    scheme: HTTP
  timeoutSeconds: 5
  periodSeconds: 30
  successThreshold: 1
  failureThreshold: 3

nodeSelector: {}

tolerations: []

affinity: {}
